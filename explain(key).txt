cv2.rectangle(img, pt1, pt2, color, thickness):

Draws a rectangle on the img frame.
(100, 100): Top-left corner of the rectangle.
(200, 200): Bottom-right corner of the rectangle.
(255, 0, 255): Color of the rectangle in BGR format (pink).
cv2.FILLED: Fills the rectangle with the specified color.
cv2.putText(img, text, org, fontFace, fontScale, color, thickness):

Writes the text "Q" on the img frame.
"Q": The text to display.
(125, 170): Bottom-left corner of the text.
cv2.FONT_HERSHEY_SIMPLEX: Font type.
3: Font scale (size of the text).
(255, 255, 255): Text color in BGR format (white).
3: Thickness of the text.




If we print for example lmList1[8]:

print(lmList1[8]) # It will give us 3 values not 2
In the findDistance:

x1, y1 = p1 # This is wrong
x1, y1, z1 = p # It should be like this
x1, y1, z1 = p1
x2, y2, z2 = p2
Another solution, is you can keep the findDistance as it is and change the line of code into:

length, info, img = detector.findDistance(lmList1[8][:2], lmList2[8][:2], img)
This will take only the first 2 values x1, y1 and x2,y2.